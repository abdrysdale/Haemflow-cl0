#+title: Comparing Computed Stroke Volume with Literature Distributions
#+author: Alex Drysdale
#+date: <2024-04-30 Tue>
#+property: header-args:R :session *R:0D_sv* :cache no :exports results :tangle sv_analysis.r

* Literature

#+begin_src R :results none
  library(ggplot2)
  library(DBI)
#+end_src

#+begin_src R :results none
  save.plot <- function(handle, plot) {
    img.dir <- "imgs"
    file.name <- paste(img.dir, handle, sep="/")
    ggsave(paste(file.name, "png", sep="."))
    ggsave(paste(file.name, "svg", sep="."))
  }
#+end_sr

#+begin_src R :results none
  # Controls the font size for all of the plots
  plot.text.size <- 30
  plot.theme <- theme(text=element_text(size=plot.text.size), #change font size of all text
                      axis.text=element_text(size=plot.text.size), #change font size of axis text
                      axis.title=element_text(size=plot.text.size), #change font size of axis titles
                      plot.title=element_text(size=plot.text.size), #change font size of plot title
                      legend.text=element_text(size=plot.text.size), #change font size of legend text
                      legend.title=element_text(size=plot.text.size)) #change font size of legend title 
  point.size <- 5
  line.size <- 2
#+end_src

** Summary

| Author | Sample Size | Mean | Standard Deviation | Lower Bound (2.5%) | Source |
|--------+-------------+------+--------------------+--------------------+--------|
| Patel  |        1450 | 73.1 |               18.5 |               45.3 | [1]    |

- [1] [[https://doi.org/10.1016/j.echo.2021.05.012][Patel et al]]

** Patel et al

#+begin_src R
  sv.mu <- 73.1
  sv.sd <- 18.5
  num.vals <- 10000

  print(paste("Mean\t", sv.mu, "\nStdev\t", sv.sd, sep=""))
#+end_src

#+RESULTS[19d51583dd82f09c52ab9fa167b846711282fe45]:
| Mean  | 73.1 |
| Stdev | 18.5 |

** Calculating lower bounds

#+begin_src R
  sv.lb.vals <- c(52.3, 47.4, 45.1, 43.6, 39.6, 39.3)
  pop.size <- c(320, 258, 195, 285, 221, 171)
  sv.lb.frac <- 2.5e-2

  sv.lb <- sum(sv.lb.vals * pop.size) / sum(pop.size)

  print(paste("Stroke volume ", sv.lb.frac * 100, "% percentile: ", sv.lb, sep=""))
#+end_src

#+RESULTS[3ae49e265b8b8bcd8986c3ba9d5c2e7d7733aad7]:
: Stroke volume 2.5% percentile: 45.2811034482759

* Simulating a non-central t-distribution for stroke volume
:PROPERTIES:
:ORG-IMAGE-ACTUAL-WIDTH: 700
:END:


#+begin_src R :results none
  num.samples <- 10000
  dof.vals <- 1:100
  mu.vals <- seq(sv.mu/2, sv.mu*2, 1)
  num.combinations <- length(dof.vals) * length(mu.vals)
  dofs <- numeric(num.combinations)
  mus <- numeric(num.combinations)
  means <- numeric(num.combinations)
  sds <- numeric(num.combinations)
  lbs <- numeric(num.combinations)

  i = 1
  for (mu in mu.vals){
    for (dof in dof.vals){
      d.sample <- rt(num.samples, dof, ncp=mu)
      dofs[i] <- dof
      mus[i] <- mu
      means[i] <- mean(d.sample)
      sds[i] <- sd(d.sample)
      lbs[i] <- sum(d.sample <= sv.lb) / length(d.sample)
      i <- i + 1
    }
  }

  error.mean <- abs(means - sv.mu) / sv.mu
  error.sd <- abs(sds - sv.sd) / sv.sd
  error.lb <- abs(lbs - sv.lb.frac) / sv.lb.frac

  error.ttl <- error.mean + error.sd + error.lb

  min.idx <- which(error.ttl == min(error.ttl))

  df <- data.frame(dof=dofs, ncp=mus, mean=means, sd=sds, lb=lbs,
                   mean.err=error.mean, sd.err=error.sd, lb.err=error.lb,
                   error=error.ttl)
#+end_src

#+begin_src R :results none
  plot <- ggplot(data=df, aes(x=dof, y=ncp, col=error)) +
    geom_point() +
    labs(x="Degrees of Freedom", y="Non-centrality Parameter", col="Error")
  save.plot("sv_error", plot)

  plot <- ggplot(data=df, aes(x=dof, y=error, col=ncp)) +
    geom_point() +
    labs(x="Degrees of Freedom", col="Non-centrality Parameter", y="Error")
  save.plot("sv_error_dof", plot)

  plot <- ggplot(data=df, aes(x=ncp, y=error, col=dof)) +
    geom_point() +
    labs(col="Degrees of Freedom", x="Non-centrality Parameter", y="Error")
  save.plot("sv_error_ncp", plot)

  df.clip <- subset(df, error <= max(error) * 0.01)
  plot <- ggplot(data=df.clip, aes(x=dof, y=ncp, col=error)) +
    geom_point() +
    labs(x="Degrees of Freedom", y="Non-centrality Parameter", col="Error")
  save.plot("sv_error_clip", plot)

  plot <- ggplot(data=df.clip, aes(x=dof, y=error, col=ncp)) +
    geom_point() +
    labs(x="Degrees of Freedom", col="Non-centrality Parameter", y="Error")
  save.plot("sv_error_dof_clip", plot)

  plot <- ggplot(data=df.clip, aes(x=ncp, y=error, col=dof)) +
    geom_point() +
    labs(col="Degrees of Freedom", x="Non-centrality Parameter", y="Error")
  save.plot("sv_error_ncp_clip", plot)
#+end_src 

#+RESULTS[8a3be54218494ade6ebc8ebc1bbc5716629013bb]:

[[file:~/PhD/Projects/0D-closed-loop/imgs/sv_error.png]]

[[file:~/PhD/Projects/0D-closed-loop/imgs/sv_error_dof.png]]

[[file:~/PhD/Projects/0D-closed-loop/imgs/sv_error_ncp.png]]

Below are the same graphs but showing the error less than 1% of the maximum error.

[[file:~/PhD/Projects/0D-closed-loop/imgs/sv_error_clip.png]]

[[file:~/PhD/Projects/0D-closed-loop/imgs/sv_error_dof_clip.png]]

[[file:~/PhD/Projects/0D-closed-loop/imgs/sv_error_ncp_clip.png]]


Hence the degrees of freedom and the non-central parameter for the non-central t-distribution are:
#+begin_src R
  sv.dof <- dofs[min.idx]
  sv.ncp <- mus[min.idx]
  print(paste("DOF\t", sv.dof, "\nNCP\t", sv.ncp, sep=""))
#+end_src

#+RESULTS[b4310164497c7b78d291049379e5bd171180374e]:
| DOF |    10 |
| NCP | 64.55 |

#+begin_src R
  d <- data.frame(vals=seq(sv.mu - 3 * sv.sd, sv.mu + 3 * sv.sd, length.out=num.vals))
  d$norm <- dnorm(d$vals, mean=sv.mu, sd=sv.sd)
  d$nct <- dt(d$vals, sv.dof, sv.ncp)

  plot.orig <- ggplot(data=d, aes(x=vals, y=norm, col="norm")) +
    geom_line() +
    geom_line(aes(y=nct, col="nct")) +
    labs(x="Stroke Volume (mL)", y="Density", col="Distribution")
  save.plot("sv_comparison", plot.orig)
#+end_src

#+RESULTS:
: imgs/sv_comparison.svg

[[file:~/PhD/Projects/0D-closed-loop/imgs/sv_comparison.png]]

* Comparison with 0D model
:PROPERTIES:
:ORG-IMAGE-ACTUAL-WIDTH: 700
:END:

#+begin_src R
  dbname <- file.path(getwd(), "physiological.db")
  table <- "sv_rel"
  con <- dbConnect(RSQLite::SQLite(), dbname=dbname)
  df <- dbGetQuery(con, paste("SELECT * FROM", table))

  # Formats data
  df$index <- c()

  df.names <- c()
  for (i in seq(1, ncol(df))) {
    var <- strsplit(names(df)[i], ".", fixed=TRUE)[[1]]
    print(var)
    print(var[length(var)])
    print("---")
    df.names[i] <- var[length(var)]
  }
  names(df) <- df.names

  df$sex <- as.factor(df$sex)

  summary(df)
#+end_src

#+RESULTS:
| Min.   :     1 | Min.   : 84.11 | Min.   : 56.14 | Min.   : 86.33 | Min.   : 58.66 | Min.   :  8.313 | Min.   :0.2874 | Min.   :121.8 | Min.   :18.00 | 0:100937 | Min.   :0.01602 | Min.   :0.06697 | Min.   :0.1820 | Min.   :0.2140 |
| 1st Qu.: 56998 | 1st Qu.:117.07 | 1st Qu.: 73.68 | 1st Qu.:117.26 | 1st Qu.: 72.82 | 1st Qu.: 33.568 | 1st Qu.:0.9268 | 1st Qu.:158.3 | 1st Qu.:34.00 | 1:100153 | 1st Qu.:0.05165 | 1st Qu.:0.21600 | 1st Qu.:0.5870 | 1st Qu.:0.6903 |
| Median :192018 | Median :146.63 | Median : 87.40 | Median :149.38 | Median : 86.97 | Median : 48.140 | Median :1.1026 | Median :165.2 | Median :53.00 |          | Median :0.06145 | Median :0.25697 | Median :0.6983 | Median :0.8212 |
| Mean   :180898 | Mean   :141.74 | Mean   : 89.12 | Mean   :145.22 | Mean   : 89.51 | Mean   : 56.121 | Mean   :1.1130 | Mean   :165.4 | Mean   :54.97 |          | Mean   :0.06203 | Mean   :0.25939 | Mean   :0.7049 | Mean   :0.8289 |
| 3rd Qu.:245640 | 3rd Qu.:160.87 | 3rd Qu.:103.17 | 3rd Qu.:166.46 | 3rd Qu.:104.58 | 3rd Qu.: 72.753 | 3rd Qu.:1.2880 | 3rd Qu.:172.4 | 3rd Qu.:75.00 |          | 3rd Qu.:0.07179 | 3rd Qu.:0.30019 | 3rd Qu.:0.8157 | 3rd Qu.:0.9593 |
| Max.   :349167 | Max.   :236.44 | Max.   :135.90 | Max.   :223.01 | Max.   :133.95 | Max.   :277.860 | Max.   :1.9562 | Max.   :208.7 | Max.   :99.00 |          | Max.   :0.10902 | Max.   :0.45592 | Max.   :1.2389 | Max.   :1.4569 |

#+begin_src R
  num.vals <- nrow(df)

  d.comparison <- data.frame(norm=rnorm(num.vals, sv.mu, sv.sd),
                  nct=rt(num.vals, sv.dof, sv.ncp),
                  sim=df$sv)

  plot <- ggplot(data=d.comparison, aes(x=sim)) +
    geom_histogram(alpha=0.5, aes(y=..density.., fill='0D simulation')) +
    geom_histogram(alpha=0.5, aes(y=..density.., x=nct, fill='Non-central t')) +
    geom_histogram(alpha=0.5, aes(y=..density.., x=norm, fill='Normal')) +
    geom_density(show.legend=FALSE, alpha=0, aes(col='0D simulation')) +
    geom_density(show.legend=FALSE, alpha=0, aes(x=nct, col='Non-central t')) +
    geom_density(show.legend=FALSE, alpha=0, aes(x=norm, col='Normal')) +
    labs(x="Stroke Volume (mL)", y="Density", fill="Distribution")

  save.plot("sv_comparison_w_simulation", plot)

  print(paste("Data has", num.vals, "rows"))
#+end_src

#+RESULTS:
: Data has 201090 rows

[[file:~/PhD/Projects/0D-closed-loop/imgs/sv_comparison_w_simulation.png]]
